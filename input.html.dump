<!DOCTYPE html>
<head>
    <script src="jquery.js"></script>
    <link rel="stylesheet" href="css/zTreeStyle/zTreeStyle.css" type="text/css">
    <script type="text/javascript" src="js/jquery.ztree.core.js"></script>
    <script type="text/javascript" src="js/jquery.ztree.excheck.js"></script>
    <script type="text/javascript" src="js/jquery.ztree.exhide.min.js"></script>
    <style type="text/css">
        #tree_0_1{
            float:left;
        }
        #tree_0_2{
            float:left;
        }
    </style>
</head>
<body>
<div>
    <div class="tab-content" style="border:0px;">
        <div class="tab-pane active" id="admin">
            <div style="margin-top:10px;height:auto">
                <div style="position:relative;float:left; width:50%">
                    <div><h2>tree1</h2></div>
                    <ul id="tree_0_1" class="ztree"></ul>
                </div>
                <div style="position:relative;float:left; width:50%">
                    <div><h2>tree2</h2></div>
                    <ul id="tree_0_2" class="ztree"></ul>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var datal =   [
            {name: "父节点1", open: true, checked: true, children: [
                {name: "子节点11", open: true},
                {name: "子节点12", open: true, children: [{name: "子节点1_2_1", open: true},{name: "子节点1_2_2", open: true}]}
            ]},
            {name: "父节点2", open: true, children: [
                {name: "子节点21", open: true},
                {name: "子节点22", open: true}
            ]}
        ];
        var datar = [
            {name: "父节点1", open: true, children: [
                {name: "子节点11", open: true},
                {name: "子节点12", open: true, children: [{name: "子节点1_2_1", open: true},{name: "子节点1_2_2", open: true}]}
            ]},
            {name: "父节点2", open: true, children: [
                {name: "子节点21", open: true},
                {name: "子节点22", open: true}
            ]}
        ];
        //获取一个节点所在的tree
        function getTree(treeNode) {
            var node = treeNode;
            while (node.getParentNode()) {
                node = node.getParentNode();
            }
            return node;
        }
        //左边tree的点选事件处理
        function zTreeOnCheck(e, treeId, treeNode) {
            var pubTree = $.fn.zTree.getZTreeObj(treeId);//操作的树
            var obTree;//联动的树
            if(treeId.substring(treeId.lastIndexOf('_') + 1) == 1){
                var obId = treeId.substring(0, treeId.lastIndexOf('_') + 1) + '2';
                obTree =  $.fn.zTree.getZTreeObj(obId);
            }
            else{
                var obId = treeId.substring(0, treeId.lastIndexOf('_') + 1) + '1';
                obTree =  $.fn.zTree.getZTreeObj(obId);
            }

            if (treeNode.checked) {
                hideChildren(obTree.getNodeByParam("name", treeNode.name), obTree);
                hideParents(obTree.getNodeByParam("name", treeNode.name), obTree);
            }
            else {
                var node = obTree.getNodeByParam("name", treeNode.name);
                obTree.showNode(node, obTree);
                showChildren(node, obTree);
                showParents(node, obTree);
            }
        }
        /***
         * 占用掉一个节点时，检查兄弟结点是否都被占用了，如果是则隐藏父结点
         * @param node 取消左边check时，右边对应的节点
         * @param ob 联动的tree
         */
        function hideParents(node, ob){
            if(node.getParentNode()){
                var brothers = node.getParentNode().children;
                var allHiden = true;
                brothers.forEach(function(item){
                    if(!item.isHidden){
                        allHiden = false;
                        return false;
                    }
                });
                if(allHiden){
                    ob.hideNode(node.getParentNode());
                    hideParents(node.getParentNode(), ob);
                }
            }
        }
        /***
         * 释放出一个节点时,显示其父节点
         * @param node 取消左边check时，右边对应的节点
         * @param ob 联动的tree
         */
        function showParents(node, ob) {
            //寻找当前节点的根节点
            while (node.getParentNode() && node.getParentNode().isHidden == true) {
                node = node.getParentNode();
                ob.showNode(node);
            }
        }
        /***
         * 要隐藏的节点，其子节点都隐藏
         * * @param node
         * * @param ob 联动的tree
         */
        function hideChildren(node, ob) {
            if(!node.checked){
                ob.hideNode(node);
            }
            if (node.children) {
                for (var i in node.children) {
                    hideChildren(node.children[i], ob);
                }
            }
        }
        /***
         * 要显示的节点，其子节点都显示
         * * @param node
         * * @param ob 联动的tree
         */
        function showChildren(node, ob) {
            ob.showNode(node);
            if (node.children) {
                for (var i in node.children) {
                    showChildren(node.children[i], ob);
                }
            }
        }

        var setting = {
            check: {
                enable: true,
                chkboxType: {"Y": "ps", "N": "ps"}
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            check: {
                enable: true,
                chkboxType: {"Y": "ps", "N": "ps"}
            },
            callback: {
                onCheck: zTreeOnCheck
            }
        };

        var rtree = $.fn.zTree.init($('#tree_0_1'), setting, datal);
        var ltree = $.fn.zTree.init($('#tree_0_2'), setting, datar);

        var arrl = ltree.getCheckedNodes();
        arrl.forEach(function(item){
            if(!rtree.getNodeByParam("name", item.name).checked){
                rtree.hideNode(rtree.getNodeByParam("name", item.name));
            }
        });
        var arrr = rtree.getCheckedNodes();
        arrr.forEach(function(item){
            if(!ltree.getNodeByParam("name", item.name).checked){
                ltree.hideNode(ltree.getNodeByParam("name", item.name));
            }
        });
    });
</script>
</body>
